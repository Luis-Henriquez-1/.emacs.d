* Version 0.1
:PROPERTIES:
:ID:       8fd5fdb0-d8e1-4f7e-a6db-4d033a05371d
:END:

** improvements to defhook
:PROPERTIES:
:ID:       cc995576-2322-45cd-82ed-4b083f94d618
:END:

The purpose of this change is to extend and improve the functionality of
=defhook!= macro. Specifically, I introduce a consistent naming scheme for
user-designed hooks (incidentally with very concise syntax), a logging system
that facilitates , and a rich set of keywords that increase the expressiveness
of declaring hooks.

To add this functionality I scrapped the =defhook!= macro I wrote in favor of the
[[https://github.com/neil-smithline-elisp/defhook][defhook package]]. This package was created in 2012.

*** syntax
:PROPERTIES:
:ID:       4a7e8e71-745a-4937-9611-86f72b9fa9b6
:END:

*** naming convention
:PROPERTIES:
:ID:       a43264d4-f30a-4411-9443-4bdda08d4290
:END:

Take, for example, the hook named =emacs-startup-hook= and the descriptor
increase-gc-cons threshold. The a hook would look like
=emacs-startup-hook&increase-garbage-collection=. So, in general, a hook name
has the format =hook-variable-name&action-to-be-done=.

*** built-in arguments
:PROPERTIES:
:ID:       feb0d3d2-04e1-4571-a9ab-0e8b2d92b0b9
:END:

=defhook= has additional arguments you can pass in to customize the behavior.

*** debugging/documenting capabilities
:PROPERTIES:
:ID:       b4130374-2b99-475b-b369-831a53a9b2c6
:END:

=defhook= provides =defhook-executed=

*** my changes
:PROPERTIES:
:ID:       e15f555d-cd4a-4d21-8544-2a6042827cd7
:END:
